<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2022-03-20T02:22:36Z</date>
    <media_types>
        <media_type>
            <name>smsc.ru</name>
            <type>WEBHOOK</type>
            <parameters>
                <parameter>
                    <name>Call</name>
                    <value>1</value>
                </parameter>
                <parameter>
                    <name>Login</name>
                    <value/>
                </parameter>
                <parameter>
                    <name>Message</name>
                    <value>{ALERT.MESSAGE}</value>
                </parameter>
                <parameter>
                    <name>Param</name>
                    <value>25,5,2</value>
                </parameter>
                <parameter>
                    <name>Password</name>
                    <value/>
                </parameter>
                <parameter>
                    <name>To</name>
                    <value>{ALERT.SENDTO}</value>
                </parameter>
            </parameters>
            <script>var Smsc = {&#13;
    login: null,&#13;
    password: null,&#13;
    phones: null,&#13;
    message: null,&#13;
    sender: null,&#13;
    call: null,&#13;
    param: null,&#13;
    voice: null,&#13;
    proxy: null,&#13;
&#13;
    sendMessage: function() {&#13;
        var params = {&#13;
            login: Smsc.login,&#13;
            psw: Smsc.password,&#13;
            phones: Smsc.phones,&#13;
            mes: Smsc.message,&#13;
            fmt: 3&#13;
        },&#13;
        response,&#13;
        request = new CurlHttpRequest(),&#13;
        url = 'https://smsc.ru/sys/send.php';&#13;
&#13;
        if (Smsc.sender !== null) {&#13;
            params['sender'] = Smsc.sender;&#13;
        }&#13;
        if (Smsc.call !== null) {&#13;
            params['call'] = Smsc.call;&#13;
        }&#13;
        if (Smsc.param !== null) {&#13;
            params['param'] = Smsc.param;&#13;
        }&#13;
        if (Smsc.voice !== null) {&#13;
            params['voice'] = Smsc.voice;&#13;
        }&#13;
        if (Smsc.proxy) {&#13;
            request.setProxy(Smsc.proxy);&#13;
        }&#13;
&#13;
        request.AddHeader('Content-Type: application/json');&#13;
        var query = Object.keys(params).map(function(key) {&#13;
            return key + '=' + params[key]&#13;
        }).join('&amp;');&#13;
        url = url + '?' + query;&#13;
        // Remove replace() function if you want to see the exposed password in the log file.&#13;
        Zabbix.Log(4, '[SMSC Webhook] URL: ' + url.replace(Smsc.password, '&lt;PASSWORD&gt;'));&#13;
        response = request.Post(url);&#13;
        Zabbix.Log(4, '[SMSC Webhook] HTTP code: ' + request.Status());&#13;
&#13;
        try {&#13;
            response = JSON.parse(response);&#13;
        }&#13;
        catch (error) {&#13;
            response = null;&#13;
        }&#13;
&#13;
        if (request.Status() !== 200 || typeof response.error_code !== &quot;undefined&quot;) {&#13;
            if (typeof response.error === 'string') {&#13;
                throw response.error;&#13;
            }&#13;
            else {&#13;
                throw 'Unknown error. Check debug log for more information.'&#13;
            }&#13;
        }&#13;
    }&#13;
}&#13;
try {&#13;
    var params = JSON.parse(value);&#13;
&#13;
    if (typeof params.Login === 'undefined') {&#13;
        throw 'Incorrect value is given for parameter &quot;Login&quot;: parameter is missing';&#13;
    }&#13;
    Smsc.login = params.Login;&#13;
&#13;
    if (typeof params.Password === 'undefined') {&#13;
        throw 'Incorrect value is given for parameter &quot;Password&quot;: parameter is missing';&#13;
    }&#13;
    Smsc.password = params.Password;&#13;
&#13;
    if (typeof params.To === 'undefined') {&#13;
        throw 'Incorrect value is given for parameter &quot;Phone&quot;: parameter is missing';&#13;
    }&#13;
    Smsc.phones = params.To;&#13;
&#13;
    if (['0','1'].indexOf(params.Call) !== -1) {&#13;
        Smsc.call = params.Call;&#13;
    }&#13;
&#13;
    if (params.Sender) {&#13;
        Smsc.sender = params.Sender;&#13;
    }&#13;
&#13;
    if (params.Param) {&#13;
        Smsc.param = params.Param;&#13;
    }&#13;
&#13;
    if (params.Voice) {&#13;
        Smsc.voice = params.Voice;&#13;
    }&#13;
&#13;
    if (params.HTTPProxy) {&#13;
        Smsc.proxy = params.HTTPProxy;&#13;
    }&#13;
&#13;
    Smsc.message = params.Message;&#13;
    Smsc.sendMessage();&#13;
&#13;
    return 'OK';&#13;
}&#13;
catch (error) {&#13;
    Zabbix.Log(4, '[SMSC Webhook] notification failed: ' + error);&#13;
    throw 'Sending failed: ' + error + '.';&#13;
}</script>
            <timeout>10s</timeout>
            <description>Звонит/отсылает смс на указанный номер телефона и зачитывает сообщение.&#13;
Call=1 - звонок&#13;
Call=0 - sms, для надёжной отправки смс необходим буквенный sender_id.&#13;
&#13;
https://smsc.ru/api/</description>
            <message_templates>
                <message_template>
                    <event_source>TRIGGERS</event_source>
                    <operation_mode>PROBLEM</operation_mode>
                    <message>Оповещение заббикса. Уровень: {EVENT.SEVERITY}. Проблема: {EVENT.NAME}. Хост: {HOST.NAME}</message>
                </message_template>
            </message_templates>
        </media_type>
    </media_types>
</zabbix_export>
